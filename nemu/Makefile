#***************************************************************************************
# Copyright (c) 2014-2022 Zihao Yu, Nanjing University
#
# NEMU is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#          http://license.coscl.org.cn/MulanPSL2
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
#
# See the Mulan PSL v2 for more details.
#**************************************************************************************/

# Sanity check
CFLAGS += -Wall -Werror 

#ifeq 用于条件判断，使用 echo 命令查看 $(NEMU_HOME) 的值（环境变量）。
#EMU_HOME 不是环境变量，而是 Makefile 中定义的变量，则需要在运行make print-NEMU_HOME
#wildcard 是 GNU Make 的一个函数，用于扩展通配符模式，返回匹配文件的列表
ifeq ($(wildcard $(NEMU_HOME)/src/nemu-main.c),)
  $(error NEMU_HOME=$(NEMU_HOME) is not a NEMU repo)
endif

# Include variables and rules generated by menuconfig
#-include 用于包含其他 Makefile 文件。前面的 - 表示即使文件不存在也不会报错
-include $(NEMU_HOME)/include/config/auto.conf
-include $(NEMU_HOME)/include/config/auto.conf.cmd

#call 用于调用自定义函数。patsubst 是一个字符串替换函数，这里用于移除引号
#$(patsubst <pattern>,<replacement>,<text>)，$(1) 是一个特殊的变量，表示在函数调用中传递的第一个参数
remove_quote = $(patsubst "%",%,$(1))

# Extract variabls from menuconfig
#?= 表示条件赋值运算符。如果变量未定义则赋值，否则保持现有值
GUEST_ISA ?= $(call remove_quote,$(CONFIG_ISA))
ENGINE ?= $(call remove_quote,$(CONFIG_ENGINE))
#将 $(GUEST_ISA) 的值、字符串 -nemu- 和 $(ENGINE) 的值连接起来，形成一个新的字符串
NAME    = $(GUEST_ISA)-nemu-$(ENGINE)

# Include all filelist.mk to merge file lists
#$(shell ...) 用于执行 Shell 命令并将结果赋值给变量，-L 选项表示跟随符号链接
FILELIST_MK = $(shell find -L ./src -name "filelist.mk")
#include 关键字包含了 FILELIST_MK 变量指定的所有文件
include $(FILELIST_MK)

# Filter out directories and files in blacklist to obtain the final set of source files
DIRS-BLACKLIST-y += $(DIRS-BLACKLIST)
#+= 是 Makefile 中的追加操作符，用于将新的值追加到已有变量的末尾
SRCS-BLACKLIST-y += $(SRCS-BLACKLIST) $(shell find -L $(DIRS-BLACKLIST-y) -name "*.c")
SRCS-y += $(shell find -L $(DIRS-y) -name "*.c")
#$(filter-out ...) 用于从一个变量列表中过滤掉某些模式
SRCS = $(filter-out $(SRCS-BLACKLIST-y),$(SRCS-y))

# Extract compiler and options from menuconfig
CC = $(call remove_quote,$(CONFIG_CC))
CFLAGS_BUILD += $(call remove_quote,$(CONFIG_CC_OPT))
#$(if ...) 是条件判断函数。如果条件为真，则返回第二个参数的值，否则返回第三个参数的值（如果有）。
CFLAGS_BUILD += $(if $(CONFIG_CC_LTO),-flto,)
CFLAGS_BUILD += $(if $(CONFIG_CC_DEBUG),-Og -ggdb3,)
CFLAGS_BUILD += $(if $(CONFIG_CC_ASAN),-fsanitize=address,)
CFLAGS_TRACE += -DITRACE_COND=$(if $(CONFIG_ITRACE_COND),$(call remove_quote,$(CONFIG_ITRACE_COND)),true)
CFLAGS  += $(CFLAGS_BUILD) $(CFLAGS_TRACE) -D__GUEST_ISA__=$(GUEST_ISA)
LDFLAGS += $(CFLAGS_BUILD)

# Include rules for menuconfig
include $(NEMU_HOME)/scripts/config.mk

ifdef CONFIG_TARGET_AM
include $(AM_HOME)/Makefile
LINKAGE += $(ARCHIVES)
else
# Include rules to build NEMU
include $(NEMU_HOME)/scripts/native.mk
endif
